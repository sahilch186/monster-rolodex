{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchFeild","target","value","state","fetch","then","response","json","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJjBC,G,MAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCN1BO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBAAOC,KAAK,SAASF,YAAaA,EAAaX,UAAU,SAASc,SAAUF,MCiCrEG,G,wDAhCb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAXrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAf,GAAQ,OAAI,EAAKS,SAAS,CAACT,kB,oBAOxH,WACE,MAAgCkB,KAAKL,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXS,EAAmBnB,EAASoB,QAAO,SAAA1B,GACvC,OAAOA,EAAQG,KAAKwB,cAAcC,SAASZ,EAAYa,wBAEzD,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWW,YAAY,yBAAyBC,aAAcc,KAAKd,eACnE,cAAC,EAAD,CAAUJ,SAAUmB,W,GA1BVK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea14d6f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name} />\r\n            <h3>{props.monster.name}</h3>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const Searchbox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input type=\"search\" placeholder={placeholder} className=\"search\" onChange={handleChange} />\r\n    )\r\n}","import {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {Searchbox} from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchFeild: \"\",\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(monsters => this.setState({monsters}))\n  }\n\n  handleChange = (e) =>{\n    this.setState({searchFeild: e.target.value})\n  }\n\n  render() {\n    const {monsters, searchFeild} = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchFeild.toLocaleLowerCase());\n    })\n    return(\n      <div className=\"App\">\n        <Searchbox placeholder=\"Search Monster by Name\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n    </div>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}